# 1. Напишіть програму, яка порахує скільки літер «b» у введеному рядку тексту.

SEARCH_LETTER = 'b'
print(input('Enter text: ').lower().count(SEARCH_LETTER))



# 2. Користувач вводить з клавіатури ім'я людини. Написати програму для перевірки введеного ім'я на валідність
#  (мається на увазі, що, наприклад, в імені людини не може бути цифр, воно повинно починатися з великої літери,
# за якою повинні йти маленькі).
name = input("Enter name: ")
print(all([name.isalpha(), name[0].upper() == name[0], name[1:].lower() == name[1:]]))



# 3. Напишіть програму, яка обчислить суму всіх кодів символів рядка.

text = input("Enter text: ")
count = 0
for i in text:
    count += ord(i)
print(count)



# 4. Виведіть на екран 10 рядків із значенням числа Pi. У першому рядку має бути 2 знаки після коми, у другому 3 і так далі.

from math import pi
temp = [round(pi,i) for i in range(2,11)]
print(*temp, sep="\n")



# 5. Вводиться з клавіатури користувачем текст. Знайти в ньому найдовше слово та вивести його на екран.

print(max(input("Enter text: ").split(), key=len))



# Додаткові задачі до домашнього завдання:
# 1. Вовочка, сидячи на уроці, писав поспіль однакові слова (слово може складатися з однієї літери).
#  Коли Марія Іванівна забрала у нього зошит, там був один рядок тексту.
# Напишіть програму, яка визначить найкоротше слово з написаних Вовочкою. Наприклад:
# aaaaaaa - Вовочка писав слово - "a"
# ititititit - Вовочка писав слово - "it"
# catcatcatcat - Вовочка писав слово - "cat"

word = input('Vovocha wrote: ')
lst = []
lst_reverse = []
i = 0
j = 0

if word[0] != word[-1] or word[0] != word[1]:
    if word != word[::-1]:
        lst.append(word[i])
        lst_reverse.append(word[-1])
        i += 1
        j -= 2
        while lst != lst_reverse:
            lst.append(word[i])
            lst_reverse.insert(0,word[j])
            i += 1
            j -= 1
        print(*lst, sep="")
    else:
        lst.append(word[i-1])
        lst.append(word[i-2])
        lst_reverse.append(word[-2])
        lst_reverse.append(word[-1])
        i += 2
        j -= 3
        while lst != lst_reverse:
            lst.append(word[i])
            lst_reverse.insert(0,word[j])
            i += 1
            j -= 1
        print(*lst, sep="")
else:
    print(word[0])



# 2. Напишіть програму для очищення тексту від HTML-тегів. Більше про html-теги https://html5book.ru/html-tags/
# Також необхідно врахувати кілька особливостей:
# - крім одинарних тегів є парні теги, наприклад <div> </div>, тобто. перший тег відкриває, а другий закриває.
# - тег у собі може містити купу додаткової інформації. Наприклад <div id="rcnt" style="clear:both;position:relative;zoom:1">

from re import sub
print(sub('<[^>]*>', '', input("Enter text: ")))

